
const CharacterCarousel = () => {
  const [selectedCharacters, setSelectedCharacters] = useState([]);

  const handleCharacterSelect = (id) => {
    if (selectedCharacters.includes(id)) {
      setSelectedCharacters(
        selectedCharacters.filter((characterId) => characterId !== id)
      );
    } else {
      setSelectedCharacters([...selectedCharacters, id]);
    }
  };

  return (
    <>
      <section className={styles.characterCarousel}>
        <AnimatePresence initial={false} mode="wait">
          <motion.figure
            key={currentIndex}
            custom={direction}
            variants={variants}
            initial="enter"
            animate="center"
            exit="exit"
            transition={{
              x: { type: "spring", stiffness: 300, damping: 30 },
              opacity: { duration: 0.2 },
            }}
            drag="x"
            dragConstraints={{ left: 0, right: 0 }}
            dragElastic={1}
            onDragEnd={(e, { offset, velocity }) => {
              const swipe = swipePower(offset.x, velocity.x);

              if (swipe < -swipeConfidenceThreshold) {
                paginate(1);
              } else if (swipe > swipeConfidenceThreshold) {
                paginate(-1);
              }
            }}
            className={styles.carouselItem}
          >
            <Image
              src={characters[currentIndex].image}
              alt={characters[currentIndex].name}
              width={500}
              height={500}
              priority={true}
            />
            <figcaption>{characters[currentIndex].name}</figcaption>
          </motion.figure>
        </AnimatePresence>
        <input
          type="checkbox"
          checked={selectedCharacters.includes(characters[currentIndex].id)}
          onChange={() => handleCharacterSelect(characters[currentIndex].id)}
        />
      </section>
      <nav className={styles.carouselControls}>
        <button
          className={`${styles.carouselButton} ${styles.prevButton}`}
          onClick={() => paginate(-1)}
        >
          <span className={styles.goldButton}>Anterior</span>
        </button>
        <button
          className={`${styles.carouselButton} ${styles.nextButton}`}
          onClick={() => paginate(1)}
        >
          <span className={styles.goldButton}>Siguiente</span>
        </button>
      </nav>
    </>
  );
};

export default CharacterCarousel;
